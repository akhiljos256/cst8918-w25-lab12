name: Terraform CI/CD
on:
  pull_request:
    branches: [main]
  push:
    branches: [main]

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_ACCESS_KEY: "${{ secrets.ARM_ACCESS_KEY }}"

permissions:
  contents: read
  pull-requests: write

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.0"

    - name: Terraform Init
      working-directory: ./infra/tf-app
      run: terraform init

    - name: Terraform Format
      working-directory: ./infra/tf-app
      run: terraform fmt -check

    - name: Terraform Plan
      if: github.event_name == 'pull_request'
      working-directory: ./infra/tf-app
      id: plan
      run: terraform plan -no-color
      continue-on-error: true

    - name: Update Pull Request
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      env:
        PLAN: "${{ steps.plan.outputs.stdout }}"
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const output = `#### Terraform Plan ðŸ“–\`${{ steps.plan.outcome }}\`
          <details><summary>Show Plan</summary>
          
          \`\`\`\n${process.env.PLAN}\n\`\`\`
          
          </details>`;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: output
          })

    - name: Terraform Apply
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      working-directory: ./infra/tf-app
      run: terraform apply -auto-approve

name: Terraform Drift Detection
on:
  schedule:
    - cron: '0 0 * * *'  # Run daily at midnight
  workflow_dispatch:  # Allow manual trigger

env:
  ARM_CLIENT_ID: "${{ secrets.AZURE_CLIENT_ID }}"
  ARM_CLIENT_SECRET: "${{ secrets.AZURE_CLIENT_SECRET }}"
  ARM_SUBSCRIPTION_ID: "${{ secrets.AZURE_SUBSCRIPTION_ID }}"
  ARM_TENANT_ID: "${{ secrets.AZURE_TENANT_ID }}"
  ARM_ACCESS_KEY: "${{ secrets.ARM_ACCESS_KEY }}"

permissions:
  contents: read
  issues: write

jobs:
  detect_drift:
    name: 'Detect Infrastructure Drift'
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v3
      with:
        terraform_version: "1.1.0"

    - name: Terraform Init
      working-directory: ./infra/tf-app
      run: terraform init

    - name: Terraform Plan
      id: plan
      working-directory: ./infra/tf-app
      run: |
        terraform plan -detailed-exitcode -no-color > plan.txt 2>&1
        exit_code=$?
        if [ $exit_code -eq 2 ]; then
          echo "Drift detected!"
          echo "drift=true" >> $GITHUB_OUTPUT
        else
          echo "No drift detected."
          echo "drift=false" >> $GITHUB_OUTPUT
        fi
        cat plan.txt

    - name: Create Drift Issue
      if: steps.plan.outputs.drift == 'true'
      uses: actions/github-script@v7
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: 'ðŸš¨ Infrastructure Drift Detected',
            body: 'Terraform detected differences between the current infrastructure state and the expected configuration. Please review the drift detection workflow run for details.'
          })
